{"mappings":"AAcA,MAAMA,EAAcC,SAASC,cAAc,eACrCC,EAAgCC,YAWjCC,KAAI,EAACC,QAAEA,EAAOC,SAAEA,KACR,wGAKKA,uFAICD,gCACQC,gFAOtBC,KAAK,IA5BVR,EAAYS,mBAAmB,YAAaN,GAC5C,MAAMO,EAAM,CACVC,UAAWV,SAASC,cAAc,aAClCU,SAAUX,SAASC,cAAc,oBACjCW,WAAYZ,SAASC,cAAc,kCACnCY,SAAUb,SAASC,cAAc,uBAoDnC,SAASa,IACad,SAASC,cAAc,uBAEzCQ,EAAIC,UAAUK,UAAUC,OAAO,WAC/BP,EAAIE,SAASM,IAAM,IAErBC,OAAOC,oBAAoB,UAAWC,EACxC,CACA,SAASA,EAAWC,GAClBC,QAAQC,IAAIF,GACO,WAAfA,EAAMG,MACRV,GAEJ,CAxCAf,EAAY0B,iBAAiB,SAE7B,SAAsBJ,GACpB,MAAMK,EAAUL,EAAMM,OAEtB,IADcD,EAAQX,UAAUa,SAAS,kBAEvC,OAWFnB,EAAIC,UAAUK,UAAUc,IAAI,WAC5BX,OAAOO,iBAAiB,UAAWL,GACnCF,OAAOO,iBAAiB,UAAWK,GAGjBC,EAZPL,EAAQM,QAAQC,OAa3BxB,EAAIE,SAASM,IAAMc,EAZnBD,EAAYJ,EAAQM,QAAQC,QAW9B,IAAoBF,CAVpB,IAEAT,QAAQC,IAAId,EAAIC,WAWhBD,EAAIG,WAAWa,iBAAiB,QAASX,GAgBzCL,EAAII,SAASY,iBAAiB,SACvB,SAAyBJ,GAC9BC,QAAQC,IAAIF,EAAMa,eAClBZ,QAAQC,IAAIF,EAAMM,QACdN,EAAMa,gBAAkBb,EAAMM,QAChCL,QAAQC,IAAI,mBAEdT,GACF,IACcd,SAASC,cAAc,eAGrC,SAAS6B,EAAYT,GACA,cAAfA,EAAMG,KACRf,EAAIE,SAAWF,EAAIE,SAASM,IACJ,eAAfI,EAAMG,OACff,EAAIE,SAAWF,EAAIE,SAASM,IAAM,EAEtC","sources":["src/index.js"],"sourcesContent":["import data from './app';\n// console.log(dataGallery);\n\n// - Создание и рендер разметки по массиву данных `galleryItems` из `app.js` и\n//   предоставленному шаблону.\n// - Реализация делегирования на галерее `ul.js-gallery` и получение `url` большого\n//   изображения.\n// - Открытие модального окна по клику на элементе галереи.\n// - Подмена значения атрибута `src` элемента `img.lightbox__image`.\n// - Закрытие модального окна по клику на кнопку\n//   `button[data-action=\"close-lightbox\"]`.\n// - Очистка значения атрибута `src` элемента `img.lightbox__image`. Это необходимо\n//   для того, чтобы при следующем открытии модального окна, пока грузится\n//   изображение, мы не видели предыдущее.\nconst containerEl = document.querySelector('.js-gallery');\nconst cardsMarkup = createCardsMarkup(dataGallery);\ncontainerEl.insertAdjacentHTML('beforeend', cardsMarkup);\nconst ref = {\n  openModal: document.querySelector('.lightbox'),\n  modalImg: document.querySelector('.lightbox__image'),\n  closeModal: document.querySelector('[data-action=\"close-lightbox\"]'),\n  backdrop: document.querySelector('.lightbox__overlay'),\n};\n\nexport function createCardsMarkup(dataGallery) {\n  return dataGallery\n    .map(({ preview, original }) => {\n      return `\n    <li class=\"gallery__item\">\n    \n        <a\n          class=\"gallery__link\"\n          href=\"${original}\"\n        >\n          <img\n            class=\"gallery__image\"\n            src=\"${preview}\"\n            data-source=\"${original}\"\n            alt=\"Tulips\"\n          />\n        </a>\n      </li>\n    `;\n    })\n    .join('');\n}\ncontainerEl.addEventListener('click', onGetFullImg);\n\nfunction onGetFullImg(event) {\n  const eventEl = event.target;\n  const isImg = eventEl.classList.contains('gallery__image');\n  if (!isImg) {\n    return;\n  }\n\n  onOpenModal();\n  onModalImg(eventEl.dataset.source);\n  onLeftRight(eventEl.dataset.source);\n}\n\nconsole.log(ref.openModal);\n\nfunction onOpenModal() {\n  ref.openModal.classList.add('is-open');\n  window.addEventListener('keydown', onEscPress);\n  window.addEventListener('keydown', onLeftRight);\n}\n\nfunction onModalImg(imgSet) {\n  ref.modalImg.src = imgSet;\n}\nref.closeModal.addEventListener('click', closeModal);\n\nfunction closeModal() {\n  const isOpenModal = document.querySelector('.lightbox.is-open');\n  if (isOpenModal) {\n    ref.openModal.classList.remove('is-open');\n    ref.modalImg.src = '';\n  }\n  window.removeEventListener('keydown', onEscPress);\n}\nfunction onEscPress(event) {\n  console.log(event);\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n}\nref.backdrop.addEventListener('click', onBackdropClick);\nexport function onBackdropClick(event) {\n  console.log(event.currentTarget);\n  console.log(event.target);\n  if (event.currentTarget === event.target) {\n    console.log('click v bacdrop');\n  }\n  closeModal();\n}\nconst refUL = document.querySelector('.js-gallery');\n// const mapUl = refUL.map(index => index);\n// console.log(mapUl);\nfunction onLeftRight(event) {\n  if (event.code === 'ArrowLeft') {\n    ref.modalImg = ref.modalImg.src;\n  } else if (event.code === 'ArrowRight') {\n    ref.modalImg = ref.modalImg.src + 1;\n  }\n}\n"],"names":["$35da740d59af89ba$var$containerEl","document","querySelector","$35da740d59af89ba$var$cardsMarkup","dataGallery","map","preview","original","join","insertAdjacentHTML","$35da740d59af89ba$var$ref","openModal","modalImg","closeModal","backdrop","$35da740d59af89ba$var$closeModal","classList","remove","src","window","removeEventListener","$35da740d59af89ba$var$onEscPress","event","console","log","code","addEventListener","eventEl","target","contains","add","$35da740d59af89ba$var$onLeftRight","imgSet","dataset","source","currentTarget"],"version":3,"file":"index.876011f6.js.map"}